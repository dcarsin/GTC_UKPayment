System.registerDynamic("com-internova-gtcpayment-web-module/_",[],!1,function(e,t,n){}),System.registerDynamic("com-internova-gtcpayment-web-module/_.js",["com-internova-gtcpayment-web-module/_"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/_"))}),System.registerDynamic("com-internova-gtcpayment-web-module/common/IUtilitario",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})}),System.registerDynamic("com-internova-gtcpayment-web-module/common/IUtilitario.js",["com-internova-gtcpayment-web-module/common/IUtilitario"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/common/IUtilitario"))}),System.registerDynamic("com-internova-gtcpayment-web-module/common/Utilitario",["sabre-ngv-app/app/services/impl/AbstractService","com-internova-gtcpayment-web-module/services/ExternalService","com-internova-gtcpayment-web-module/common/XmlPayLoads","com-internova-gtcpayment-web-module/Context"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0}),t.Utilitario=void 0;var a=e("sabre-ngv-app/app/services/impl/AbstractService"),i=e("../services/ExternalService"),s=e("./XmlPayLoads"),c=e("../Context"),l=function(e){function Utilitario(){return null!==e&&e.apply(this,arguments)||this}return o(Utilitario,e),Utilitario.prototype.GetPayLoad=function(e){return new Promise(function(t,n){var r=s.XmlPayLoads.items[e];r&&r.length?t(r):n("")})},Utilitario.prototype.GetXPathResult=function(e,t,n,r){var o=(new DOMParser).parseFromString(e,"text/xml");return o.evaluate(t,o,n,r,null)},Utilitario.prototype.IsMatch=function(e,t){return new RegExp(t).test(e)},Utilitario.prototype.GetValue=function(e,t,n){for(var r,o="";null!==(r=t.exec(e));)r.index===t.lastIndex&&t.lastIndex++,r.forEach(function(e,t){t===n&&(o=e)});return o},Utilitario.prototype.GetValues=function(e,t,n){for(var r,o=[];null!==(r=t.exec(e));)r.index===t.lastIndex&&t.lastIndex++,r.forEach(function(e,t){t===n&&o.push(e)});return o},Utilitario.prototype.RemoveNameSpace=function(e){return e=e.replace(/xmlns=\"(.*?)\"/g,"")},Utilitario.prototype.GetPayLoadInfo=function(e){return new Promise(function(t,n){(0,c.getService)(i.ExternalService).sendRequest("GET",e).then(function(e){t(e)}).catch(function(e){console.error("err.statusText:",e.statusText),n(e)})})},Utilitario.prototype.StringToXml=function(e){return(new DOMParser).parseFromString(e,"text/xml")},Utilitario.prototype.DocumentToString=function(e){return(new XMLSerializer).serializeToString(e)},Utilitario.SERVICE_NAME="com-internova-gtcpayment-web-module-Utilitario",Utilitario}(a.AbstractService);t.Utilitario=l}),System.registerDynamic("com-internova-gtcpayment-web-module/common/Utilitario.js",["com-internova-gtcpayment-web-module/common/Utilitario"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/common/Utilitario"))}),System.registerDynamic("com-internova-gtcpayment-web-module/common/XmlPayLoads",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.XmlPayLoads=void 0;var r=function(){function XmlPayLoads(){}return XmlPayLoads.items={AddAccountingLineLLSRQ:'<AddAccountingLineRQ TimeStamp="2015-04-09T14:30:00-06:00" Version="2.0.0">\n  <AirAccountingLines>\n    <InteractiveElectronicTicket>\n      <FOP_One Type="CK"/>\n      <ItinTotalFare>\n        <BaseFare Amount="0.00"/>\n        <Commission Amount="0.00"/>\n        <Taxes>\n          <Tax Amount="0.00"/>\n        </Taxes>\n      </ItinTotalFare>\n      <PersonName NameNumber="1.1">\n        <GivenName></GivenName>\n        <Surname></Surname>\n      </PersonName>\n      <Ticketing eTicketNumber="28282828280" NumDocs="1" Tariff="D"/>\n      <Type Info="ONE"/>\n      <VendorPrefs>\n        <Airline Code="DL"/>\n      </VendorPrefs>\n    </InteractiveElectronicTicket>\n  </AirAccountingLines>\n</AddAccountingLineRQ>',UpdateReservationRQCar:'<UpdateReservationRQ xmlns="http://webservices.sabre.com/pnrbuilder/v1_19"\nxmlns:ns2="http://services.sabre.com/res/or/v1_14" Version="1.19.0">\n<ReservationUpdateList>\n  <ReservationUpdateItem>\n    <ProductUpdate op="C">\n      <Product>\n        <ns2:ProductDetails endDateTime="" startDateTime="" startPoint="" statusCode="GK" vendorCode="">\n          <ns2:ProductName type="CAR"/>\n          <ns2:Vehicle>\n            <ns2:ConfirmationNumber></ns2:ConfirmationNumber>\n            <ns2:VehicleRentalCore>\n              <ns2:DropOffLocationDetails locationCode=""/>\n              <ns2:LocationDetails locationCode=""/>\n            </ns2:VehicleRentalCore>\n            <ns2:VehicleVendorAvail>\n              <ns2:VehicleResCore>\n                <ns2:PricedEquipment equipmentType="" quantity="1"/>\n                <ns2:RentalRate>\n                  <ns2:Billing reference=""/>\n                  <ns2:Client>\n                    <ns2:ID></ns2:ID>\n                  </ns2:Client>\n                  <ns2:ServiceInformation>\n                      <ns2:Text></ns2:Text>\n                  </ns2:ServiceInformation>\n                </ns2:RentalRate>\n                <ns2:Charge dropOffCharge="" typeOfGuarantee="" />\n              </ns2:VehicleResCore>\n            </ns2:VehicleVendorAvail>\n            <ns2:PricingElements>\n            </ns2:PricingElements>\n          </ns2:Vehicle>\n        </ns2:ProductDetails>\n      </Product>\n    </ProductUpdate>\n  </ReservationUpdateItem>\n</ReservationUpdateList>\n</UpdateReservationRQ>',UpdateReservationRQrmk:'<UpdateReservationRQ xmlns="http://webservices.sabre.com/pnrbuilder/v1_19" xmlns:or="http://services.sabre.com/res/or/v1_12" Version="1.19.0" EchoToken="RK/ENV/PXGSSDMLT-60703">\n<RequestType>Stateful</RequestType>\n  <ReservationUpdateList>\n      <ReservationUpdateItem>\n      </ReservationUpdateItem>\n  </ReservationUpdateList>\n</UpdateReservationRQ>',UpdateReservationRQHotel:'<UpdateReservationRQ xmlns="http://webservices.sabre.com/pnrbuilder/v1_19"\nxmlns:ns2="http://services.sabre.com/res/or/v1_14" Version="1.19.0">\n  <ReservationUpdateList>\n    <ReservationUpdateItem>\n      <ProductUpdate op="C">\n        <Product>\n          <ns2:ProductDetails>\n            <ns2:ProductName type="HHT"/>\n            <ns2:Hotel>\n              <ns2:Reservation>\n                <ns2:LineStatus>GK</ns2:LineStatus>\n                <ns2:SpecialPrefs>\n                </ns2:SpecialPrefs>\n                <ns2:RoomType>\n                  <ns2:RoomTypeCode></ns2:RoomTypeCode>\n                  <ns2:NumberOfUnits></ns2:NumberOfUnits>\n                </ns2:RoomType>\n                <ns2:RoomRates>\n                  <ns2:AmountBeforeTax></ns2:AmountBeforeTax>\n                  <ns2:CurrencyCode></ns2:CurrencyCode>\n                </ns2:RoomRates>\n                <ns2:TimeSpanStart></ns2:TimeSpanStart>\n                <ns2:TimeSpanEnd></ns2:TimeSpanEnd>\n                <ns2:Guarantee>\n                </ns2:Guarantee>\n                <ns2:ChainCode></ns2:ChainCode>\n                <ns2:HotelCityCode></ns2:HotelCityCode>\n                <ns2:HotelName></ns2:HotelName>\n              </ns2:Reservation>\n              <ns2:AdditionalInformation>\n                <ns2:ConfirmationNumber></ns2:ConfirmationNumber>\n                <ns2:Address>\n                </ns2:Address>\n                <ns2:ContactNumbers>\n                  <ns2:PhoneNumber></ns2:PhoneNumber>\n                </ns2:ContactNumbers>\n              </ns2:AdditionalInformation>\n            </ns2:Hotel>\n          </ns2:ProductDetails>\n        </Product>\n      </ProductUpdate>\n    </ReservationUpdateItem>\n  </ReservationUpdateList>\n</UpdateReservationRQ>',AddRemarkLLSRQ:'\n<AddRemarkRQ xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ReturnHostCommand="true" Version="2.1.1">\n<RemarkInfo>\n</RemarkInfo>\n</AddRemarkRQ>',ContextChangeLLSRQ:'        \n<ContextChangeRQ Version="2.0.3"\nxmlns="http://webservices.sabre.com/sabreXML/2011/10">\n<ChangeAAA PseudoCityCode="KA0J"/>\n</ContextChangeRQ>',EPS_EXT_ProfileReadRQ:'        \n<Sabre_OTA_ProfileReadRQ xmlns="http://www.sabre.com/eps/schemas"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sabre.com/eps/schemas        \n        ..schemasWSDLSabre_OTA_ProfileReadRQ.xsd" Version="6.55">\n<Profile>\n  <TPA_Identity UniqueID="229281197" ClientCode="TN" DomainID="KA0J" ClientContextCode="MYS">\n  </TPA_Identity>\n</Profile>\n</Sabre_OTA_ProfileReadRQ>',eTicketCouponLLSRQ:'\n<eTicketCouponRQ xmlns="http://webservices.sabre.com/sabreXML/2011/10" Version="2.0.0" ReturnHostCommand="true">\n<Ticketing eTicketNumber="2204898351580"/>\n</eTicketCouponRQ>',GetReservationRQ_WithSession:'\n<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"\nxmlns:eb="http://www.ebxml.org/namespaces/messageHeader"\nxmlns:xlink="http://www.w3.org/1999/xlink"\nxmlns:xsd="http://www.w3.org/1999/XMLSchema">\n<SOAP-ENV:Header>\n  <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">\n    <eb:From>\n      <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>\n    </eb:From>\n    <eb:To>\n      <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>\n    </eb:To>\n    <eb:CPAId>U511</eb:CPAId>\n    <eb:ConversationId>webservices.support@sabre.com</eb:ConversationId>\n    <eb:Service eb:type="OTA">Air</eb:Service>\n    <eb:Action>GetReservationRQ</eb:Action>\n    <eb:MessageData>\n      <eb:MessageId>1000</eb:MessageId>\n      <eb:Timestamp>2016-12-30T05:25:32z</eb:Timestamp>\n    </eb:MessageData>\n  </eb:MessageHeader>\n  <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext"\n    xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">\n    <wsse:BinarySecurityToken></wsse:BinarySecurityToken>\n  </wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n  <GetReservationRQ Version="1.19.0"\n    xmlns="http://webservices.sabre.com/pnrbuilder/v1_19">\n    <Locator></Locator>\n    <RequestType>Stateful</RequestType>\n    <ReturnOptions PriceQuoteServiceVersion="3.2.0">\n      <SubjectAreas>\n        <SubjectArea>FULL</SubjectArea>\n        <SubjectArea>PRICE_QUOTE</SubjectArea>\n      </SubjectAreas>\n    </ReturnOptions>\n  </GetReservationRQ>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>',GetReservationRQ:'\n<GetReservationRQ Version="1.19.0"\nxmlns="http://webservices.sabre.com/pnrbuilder/v1_19">\n<Locator>OSUICI</Locator>\n<RequestType>Stateful</RequestType>\n<ReturnOptions>\n  <ViewName>VaDefaultWithPq</ViewName>\n  <ResponseFormat>STL</ResponseFormat>\n</ReturnOptions>\n</GetReservationRQ>',IgnoreTransactionLLSRQ_WithSession:'\n<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"\nxmlns:eb="http://www.ebxml.org/namespaces/messageHeader"\nxmlns:xlink="http://www.w3.org/1999/xlink"\nxmlns:xsd="http://www.w3.org/1999/XMLSchema">\n<SOAP-ENV:Header>\n  <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">\n    <eb:From>\n      <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>\n    </eb:From>\n    <eb:To>\n      <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>\n    </eb:To>\n    <eb:CPAId>KA0J</eb:CPAId>\n    <eb:ConversationId>webservices.support@sabre.com</eb:ConversationId>\n    <eb:Service eb:type="OTA">IgnoreTransactionLLSRQ</eb:Service>\n    <eb:Action>IgnoreTransactionLLSRQ</eb:Action>\n    <eb:MessageData>\n      <eb:MessageId>1000</eb:MessageId>\n      <eb:Timestamp>2016-12-30T05:25:32z</eb:Timestamp>\n    </eb:MessageData>\n  </eb:MessageHeader>\n  <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext"\n    xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">\n    <wsse:BinarySecurityToken></wsse:BinarySecurityToken>\n  </wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n  <IgnoreTransactionRQ ReturnHostCommand="true" Version="2.0.0"\n    xmlns="http://webservices.sabre.com/sabreXML/2011/10"/>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>',PassengerDetailsRQ_WithSession:'\n<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"\nxmlns:eb="http://www.ebxml.org/namespaces/messageHeader"\nxmlns:xlink="http://www.w3.org/1999/xlink"\nxmlns:xsd="http://www.w3.org/1999/XMLSchema">\n<SOAP-ENV:Header>\n  <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">\n    <eb:From>\n      <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>\n    </eb:From>\n    <eb:To>\n      <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>\n    </eb:To>\n    <eb:CPAId>KA0J</eb:CPAId>\n    <eb:ConversationId>webservices.support@sabre.com</eb:ConversationId>\n    <eb:Service eb:type="OTA">PassengerDetailsRQ</eb:Service>\n    <eb:Action>PassengerDetailsRQ</eb:Action>\n    <eb:MessageData>\n      <eb:MessageId>1000</eb:MessageId>\n      <eb:Timestamp>2016-12-30T05:25:32z</eb:Timestamp>\n    </eb:MessageData>\n  </eb:MessageHeader>\n  <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext"\n    xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">\n    <wsse:BinarySecurityToken></wsse:BinarySecurityToken>\n  </wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n  <PassengerDetailsRQ xmlns="http://services.sabre.com/sp/pd/v3_4" version="3.4.0" ignoreOnError="false" haltOnError="false">\n    <MiscSegmentSellRQ>\n      <MiscSegment DepartureDateTime="12-21" InsertAfter="0" NumberInParty="1" Status="GK" Type="OTH">\n        <OriginLocation LocationCode="FSG"/>\n        <Text>TEST</Text>\n        <VendorPrefs>\n          <Airline Code="XX"/>\n        </VendorPrefs>\n      </MiscSegment>\n    </MiscSegmentSellRQ>\n    <PostProcessing haltOnInvalidMCT="false" ignoreAfter="true" unmaskCreditCard="false">\n      <RedisplayReservation waitInterval="100" returnExtendedPriceQuote="false"/>\n      <EndTransactionRQ shouldCheckRefId="true">\n        <EndTransaction Ind="true"/>\n        <Source ReceivedFrom="SWS VISTAJET"/>\n      </EndTransactionRQ>\n      <QueuePlaceRQ NumResponses="5">\n        <QueueInfo>\n          <QueueIdentifier Number="400" PrefatoryInstructionCode="10" PseudoCityCode="KA0J"/>\n          <UniqueID ID="UDFJGZ"/>\n        </QueueInfo>\n      </QueuePlaceRQ>\n    </PostProcessing>\n    <ProfileRQ>\n      <UniqueID id="CRHTL"/>\n    </ProfileRQ>\n    <SpecialReqDetails>\n      <AddRemarkRQ>\n        <RemarkInfo>\n          <Remark Code="H" Type="Alpha-Coded">\n            <Text></Text>\n          </Remark>\n        </RemarkInfo>\n      </AddRemarkRQ>\n    </SpecialReqDetails>\n  </PassengerDetailsRQ>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>',PassengerDetailsRQ:'\n<PassengerDetailsRQ xmlns="http://services.sabre.com/sp/pd/v3_4" version="3.4.0" ignoreOnError="false" haltOnError="false">\n<MiscSegmentSellRQ>\n  <MiscSegment DepartureDateTime="12-21" InsertAfter="0" NumberInParty="1" Status="GK" Type="OTH">\n    <OriginLocation LocationCode="FSG"/>\n    <Text>TEST</Text>\n    <VendorPrefs>\n      <Airline Code="XX"/>\n    </VendorPrefs>\n  </MiscSegment>\n</MiscSegmentSellRQ>\n<PostProcessing haltOnInvalidMCT="false" ignoreAfter="true" unmaskCreditCard="false">\n  <RedisplayReservation waitInterval="100" returnExtendedPriceQuote="false"/>\n  <EndTransactionRQ shouldCheckRefId="true">\n    <EndTransaction Ind="true"/>\n    <Source ReceivedFrom="SWS VISTAJET"/>\n  </EndTransactionRQ>\n  <QueuePlaceRQ NumResponses="5">\n    <QueueInfo>\n      <QueueIdentifier Number="400" PrefatoryInstructionCode="10" PseudoCityCode="KA0J"/>\n      <UniqueID ID="UDFJGZ"/>\n    </QueueInfo>\n  </QueuePlaceRQ>\n</PostProcessing>\n<ProfileRQ>\n  <UniqueID id="CRHTL"/>\n</ProfileRQ>\n<SpecialReqDetails>\n  <AddRemarkRQ>\n    <RemarkInfo>\n      <Remark Code="H" SegmentNumber="1" Type="General">\n        <Text>TEST REMARK 2</Text>\n      </Remark>\n    </RemarkInfo>\n  </AddRemarkRQ>\n</SpecialReqDetails>\n</PassengerDetailsRQ>',QueuePlaceRQ:'<QueuePlaceRQ xmlns="http://webservices.sabre.com/sabreXML/2011/10"\nxmlns:xs="http://www.w3.org/2001/XMLSchema"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="2.0.4">\n<QueueInfo>\n<QueueIdentifier Number="" PrefatoryInstructionCode="11" PseudoCityCode=""/>\n</QueueInfo>\n</QueuePlaceRQ>',Sabre_OTA_ProfileReadRQ:'\n<Sabre_OTA_ProfileReadRQ xmlns="http://www.sabre.com/eps/schemas"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sabre.com/eps/schemas\n..schemasWSDLSabre_OTA_ProfileReadRQ.xsd" Version="6.55">\n<Profile>\n<TPA_Identity UniqueID="*" ClientCode="" DomainID="" ProfileTypeCode="" ClientContextCode="" />\n</Profile>\n</Sabre_OTA_ProfileReadRQ>',Sabre_OTA_ProfileSearchRQ:'\n<Sabre_OTA_ProfileSearchRQ Version="6.26"\nxmlns="http://www.sabre.com/eps/schemas"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sabre.com/eps/schemas ..schemaswsdlSabre_OTA_ProfileSearchRQ.xsd">\n<ProfileSearchCriteria ProfileNameOnly="Y">\n<TPA_Identity ClientCode="" ClientContextCode="" DomainID="" ProfileName="" ProfileTypeCode=""/>\n</ProfileSearchCriteria>\n</Sabre_OTA_ProfileSearchRQ>',Sabre_OTA_ProfileToPNRRQ_WithSession:'\n<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"\nxmlns:eb="http://www.ebxml.org/namespaces/messageHeader"\nxmlns:xlink="http://www.w3.org/1999/xlink"\nxmlns:xsd="http://www.w3.org/1999/XMLSchema">\n<SOAP-ENV:Header>\n<eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">\n  <eb:From>\n    <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>\n  </eb:From>\n  <eb:To>\n    <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>\n  </eb:To>\n  <eb:CPAId>KA0J</eb:CPAId>\n  <eb:ConversationId>webservices.support@sabre.com</eb:ConversationId>\n  <eb:Service eb:type="OTA">EPS</eb:Service>\n  <eb:Action>EPS_EXT_ProfileToPNRRQ</eb:Action>\n  <eb:MessageData>\n    <eb:MessageId>1000</eb:MessageId>\n    <eb:Timestamp>2016-12-30T05:25:32z</eb:Timestamp>\n  </eb:MessageData>\n</eb:MessageHeader>\n<wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext"\n  xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">\n  <wsse:BinarySecurityToken></wsse:BinarySecurityToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<Sabre_OTA_ProfileToPNRRQ Target="Production" TimeStamp="2013-04-30T08:24:42.967Z" Version="6.55" xsi:schemaLocation="http://www.sabre.com/eps/schemas schemasSabre_OTA_ProfileCreateRQ.xsd"\n  xmlns="http://www.sabre.com/eps/schemas"\n  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <FilterPath>\n    <Profile ClientCode="" ClientContextCode="" DomainID="" ProfileTypeCode="" UniqueID="" ProfileName="" PNRMoveOrderSeqNo="1">\n      <Filter FilterID="" DomainID="" ClientCode="" ClientContextCode="" FilterName=""/>\n    </Profile>\n  </FilterPath>\n</Sabre_OTA_ProfileToPNRRQ>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>',Sabre_OTA_ProfileToPNRRQ:'\n<Sabre_OTA_ProfileToPNRRQ Target="Production" TimeStamp="2013-04-30T08:24:42.967Z" Version="6.55" xsi:schemaLocation="http://www.sabre.com/eps/schemas schemasSabre_OTA_ProfileCreateRQ.xsd"\nxmlns="http://www.sabre.com/eps/schemas"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n<FilterPath>\n<Profile ClientCode="" ClientContextCode="" DomainID="" ProfileTypeCode="" UniqueID="" ProfileName="" PNRMoveOrderSeqNo="1">\n  <Filter FilterID="" DomainID="" ClientCode="" ClientContextCode="" FilterName=""/>\n</Profile>\n</FilterPath>\n</Sabre_OTA_ProfileToPNRRQ>',SabreCommandLLSRQ_WithSession:'<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"\nxmlns:eb="http://www.ebxml.org/namespaces/messageHeader"\nxmlns:xlink="http://www.w3.org/1999/xlink"\nxmlns:xsd="http://www.w3.org/1999/XMLSchema">\n<SOAP-ENV:Header>\n<eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">\n<eb:From>\n  <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>\n</eb:From>\n<eb:To>\n  <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>\n</eb:To>\n<eb:CPAId>KA0J</eb:CPAId>\n<eb:ConversationId>webservices.support@sabre.com</eb:ConversationId>\n<eb:Service eb:type="OTA">SabreCommandLLSRQ</eb:Service>\n<eb:Action>SabreCommandLLSRQ</eb:Action>\n<eb:MessageData>\n  <eb:MessageId>1000</eb:MessageId>\n  <eb:Timestamp>2016-12-30T05:25:32z</eb:Timestamp>\n</eb:MessageData>\n</eb:MessageHeader>\n<wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext"\nxmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">\n<wsse:BinarySecurityToken></wsse:BinarySecurityToken>\n</wsse:Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<SabreCommandLLSRQ xmlns="http://webservices.sabre.com/sabreXML/2003/07"\nxmlns:xs="http://www.w3.org/2001/XMLSchema"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" TimeStamp="2014-03-04T14:00:00" Version="1.8.1">\n<Request Output="SCREEN" CDATA="true">\n  <HostCommand></HostCommand>\n</Request>\n</SabreCommandLLSRQ>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>',SabreCommandLLSRQ:'\n<SabreCommandLLSRQ xmlns="http://webservices.sabre.com/sabreXML/2003/07"\nxmlns:xs="http://www.w3.org/2001/XMLSchema"\nxmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" TimeStamp="2014-03-04T14:00:00" Version="1.8.1">\n<Request Output="SCREEN" CDATA="true">\n<HostCommand></HostCommand>\n</Request>\n</SabreCommandLLSRQ>',SessionCreateRQ:'\n<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/">\n<SOAP-ENV:Header>\n<MessageHeader xmlns="http://www.ebxml.org/namespaces/messageHeader">\n<From>\n  <PartyId>Agency</PartyId>\n</From>\n<To>\n  <PartyId>Sabre_API</PartyId>\n</To>\n<ConversationId>2021.01.DevStudio</ConversationId>\n<Action>SessionCreateRQ</Action>\n</MessageHeader>\n<Security xmlns="http://schemas.xmlsoap.org/ws/2002/12/secext">\n<UsernameToken>\n  <Username></Username>\n  <Password></Password>\n  <Organization></Organization>\n  <Domain>DEFAULT</Domain>\n</UsernameToken>\n</Security>\n</SOAP-ENV:Header>\n<SOAP-ENV:Body>\n<SessionCreateRQ returnContextID="true" Version="1.0.0"\nxmlns="http://www.opentravel.org/OTA/2002/11"/>\n</SOAP-ENV:Body>\n</SOAP-ENV:Envelope>'},XmlPayLoads}();t.XmlPayLoads=r}),System.registerDynamic("com-internova-gtcpayment-web-module/common/XmlPayLoads.js",["com-internova-gtcpayment-web-module/common/XmlPayLoads"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/common/XmlPayLoads"))}),System.registerDynamic("com-internova-gtcpayment-web-module/Context",["sabre-ngv-core/modules/ModuleContext","sabre-ngv-app/app/services/impl/I18nService"],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.t=t.getService=t.registerService=t.cf=t.context=void 0;var r=e("sabre-ngv-core/modules/ModuleContext"),o=e("sabre-ngv-app/app/services/impl/I18nService");t.context=new r.ModuleContext("com-internova-gtcpayment-web-module"),t.cf=t.context.cf.bind(t.context),t.registerService=t.context.registerService.bind(t.context),t.getService=t.context.getService.bind(t.context),t.t=(0,t.getService)(o.I18nService).getScopedTranslator("com-internova-gtcpayment-web-module/translations")}),System.registerDynamic("com-internova-gtcpayment-web-module/Context.js",["com-internova-gtcpayment-web-module/Context"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/Context"))}),System.registerDynamic("com-internova-gtcpayment-web-module/controllers/ISabreController",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})}),System.registerDynamic("com-internova-gtcpayment-web-module/controllers/ISabreController.js",["com-internova-gtcpayment-web-module/controllers/ISabreController"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/controllers/ISabreController"))}),System.registerDynamic("com-internova-gtcpayment-web-module/controllers/SabreController",["sabre-ngv-app/app/services/impl/AbstractService","com-internova-gtcpayment-web-module/Context","com-internova-gtcpayment-web-module/services/SabreService","sabre-ngv-commsg/services/ICommandMessageService","com-internova-gtcpayment-web-module/common/Utilitario"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0}),t.SabreController=void 0;var a=e("sabre-ngv-app/app/services/impl/AbstractService"),i=e("../Context"),s=e("../services/SabreService"),c=e("sabre-ngv-commsg/services/ICommandMessageService"),l=e("../common/Utilitario"),m=function(e){function SabreController(){return null!==e&&e.apply(this,arguments)||this}return o(SabreController,e),SabreController.prototype.buildRequestGetReservation=function(e){var t=this;return new Promise(function(n,r){t.buildGetReservationRQ(e,"GetReservationRQ").then(function(e){(0,i.getService)(s.SabreService).callSoapServiceAsync(e,"GetReservationRQ","SESSION",1e4).then(function(e){console.log("resolver GetReservationRQ",e),n(!0)}).catch(function(e){r(e)})}).catch(function(e){})})},SabreController.prototype.buildRequestAddRemark=function(e){var t=this;return new Promise(function(n,r){console.log("listRemarks on buildRequestAddRemark",e),t.buildAddRemarkRQ(e,"AddRemarkLLSRQ").then(function(e){(0,i.getService)(s.SabreService).callSoapServiceAsync(e,"AddRemarkLLSRQ","SESSION",1e4).then(function(e){console.log("resolver AddRemarkLLSRQ",e),n(!0)}).catch(function(e){r(e)})}).catch(function(e){})})},SabreController.prototype.RemarkUpdate=function(e){var t=this;return new Promise(function(n,r){t.buildRemarkUpdateRQ(e,"UpdateReservationRQrmk").then(function(e){(0,i.getService)(s.SabreService).callSoapServiceAsync(e,"UpdateReservationRQ","SESSION",1e4).then(function(e){console.log("resolver UpdateReservationRQ",e),n(!0)}).catch(function(e){r(e)})}).catch(function(e){})})},SabreController.prototype.SendCommandAsync=function(e){var t=this;return new Promise(function(n,r){t.buildRequestSabreCommand(e,"SabreCommandLLSRQ").then(function(e){(0,i.getService)(s.SabreService).callSoapServiceAsync(e,"SabreCommandLLSRQ","SESSION",1e4).then(function(e){n(!0)}).catch(function(e){r(e)})}).catch(function(e){})})},SabreController.prototype.SendCommandAsyncRs=function(e){var t=this;return new Promise(function(n,r){t.buildRequestSabreCommand(e,"SabreCommandLLSRQ").then(function(e){console.log("resp:",e),(0,i.getService)(s.SabreService).callSoapServiceAsync(e,"SabreCommandLLSRQ","SESSION",1e4).then(function(e){var t=(0,i.getService)(l.Utilitario).StringToXml(e).getElementsByTagName("Response");n(t[0].childNodes[0].nodeValue)}).catch(function(e){r(e)})}).catch(function(e){})})},SabreController.prototype.SendCommandSync=function(e){var t=null,n=this.buildRequestSendCommand(e);if(null!=n&&null!=(t=(0,i.getService)(s.SabreService).callSoapServiceSync(n,"SabreCommandLLSRQ"))){var r=JSON.parse(t);return t="",null!=r.response&&r.response.success&&(t=r.response.payload.responseText),t}return t},SabreController.prototype.SendCommandMessage=function(e,t,n){return(0,i.getService)(c.ICommandMessageService).send({rq:e,showRq:t,showRs:n})},SabreController.prototype.checkNodeValues=function(e,t,n){var r="";if(n.localName==e&&n.hasAttributes)for(var o=n.attributes,a=0;a<o.length;a++)o[a].name==t&&(r=o[a].value);return r},SabreController.prototype.GetFinalValue=function(e,t,n,r){var o=new Array;o.push([t,n]),"*"==r&&o.push(["segtype",e.localName]);for(var a=e.childNodes,i=0;i<a.length;i++){var s=a[i];if(s.localName){var c=s.localName,l=s.textContent;o.push([c,l])}}return o},SabreController.prototype.GetElement=function(e,t,n){n&&(e=(0,i.getService)(l.Utilitario).RemoveNameSpace(e));var r=(new DOMParser).parseFromString(e,"text/xml").childNodes[0];if(r.hasAttributes)for(var o=r.attributes,a=!1,s=0;s<o.length;s++){if("xmlns"==o[s].name.split(":")[0]&&!a){var c=o[s].value;a=!0}}return(0,i.getService)(l.Utilitario).GetXPathResult(e,t,function resolverNS(){return c},0).iterateNext()},SabreController.prototype.AddRemarksAsync=function(e){var t=this;return new Promise(function(n,r){t.buildRequestAddRemark(e)})},SabreController.prototype.buildRequestReservation=function(e){return new Promise(function(t,n){(0,i.getService)(l.Utilitario).GetPayLoad(e).then(function(e){t(e)}).catch(function(e){n(e)})})},SabreController.prototype.buildAddRemarkRQ=function(e,t){return new Promise(function(n,r){var o=null;console.log("listRemarks on buildAddRemarkRQ",e);var a=(0,i.getService)(l.Utilitario);a.GetPayLoad(t).then(function(t){var r=a.StringToXml(t);console.log("StringToXml",r);var i=r.getElementsByTagName("RemarkInfo");if(null!=e&&e.length>0)for(var s=0,c=e;s<c.length;s++){var l=c[s];console.log("rmk",l);var m=i[0].appendChild(r.createElement("Remark"));m.setAttribute("Type",l.Type),l.Code&&m.setAttribute("Code",l.Code),l.SegNum&&m.setAttribute("SegmentNumber",l.SegNum),m.appendChild(r.createElement("Text")).textContent=l.Text}o=(o=a.DocumentToString(r)).replace(/xmlns=""/g,""),n(o)}).catch(function(e){r(e)})})},SabreController.prototype.buildRemarkUpdateRQ=function(e,t){return new Promise(function(n,r){var o=null,a=(0,i.getService)(l.Utilitario);a.GetPayLoad(t).then(function(t){var r=a.StringToXml(t),i=r.getElementsByTagName("ReservationUpdateItem");if(null!=e&&e.length>0)for(var s=0,c=e;s<c.length;s++){var l=c[s],m=i[0].appendChild(r.createElement("RemarkUpdate"));m.setAttribute("id",l.Id),m.setAttribute("type","INVOICE"),m.setAttribute("op","U"),m.appendChild(r.createElement("RemarkText")).textContent=l.Text}o=(o=a.DocumentToString(r)).replace(/xmlns=""/g,""),n(o)}).catch(function(e){r(e)})})},SabreController.prototype.buildRequestSabreCommand=function(e,t){return new Promise(function(n,r){var o=null,a=(0,i.getService)(l.Utilitario);a.GetPayLoad(t).then(function(t){if(null!=e){var i=a.StringToXml(t);i.getElementsByTagName("HostCommand")[0].textContent=e,console.log("resolver despues convertir",i.documentElement.innerHTML),o=a.DocumentToString(i),n(o)}else r()}).catch(function(e){r(e)})})},SabreController.prototype.buildRequestSendCommand=function(e){return'<SabreCommandLLSRQ xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" TimeStamp="2014-03-04T14:00:00" Version="1.8.1"><Request Output="SCREEN" CDATA="false"><HostCommand>'+e+"</HostCommand></Request></SabreCommandLLSRQ>"},SabreController.prototype.buildGetReservationRQ=function(e,t){return new Promise(function(n,r){var o=null,a=(0,i.getService)(l.Utilitario);a.GetPayLoad(t).then(function(t){var r=a.StringToXml(t);r.getElementsByTagName("Locator")[0].textContent=e,o=(o=a.DocumentToString(r)).replace(/xmlns=""/g,""),console.log("returnValue",o),n(o)}).catch(function(e){r(e)})})},SabreController.prototype.InputValidator=function(e){document.getElementById(e).value?(document.getElementById(e+"Div").classList.remove("has-error"),document.getElementById(e+"Error").innerText=""):(document.getElementById(e+"Div").classList.add("has-error"),document.getElementById(e+"Error").innerText="Field cannot be empty or blank")},SabreController.SERVICE_NAME="com-internova-gtcpayment-web-module-SabreController",SabreController}(a.AbstractService);t.SabreController=m}),System.registerDynamic("com-internova-gtcpayment-web-module/controllers/SabreController.js",["com-internova-gtcpayment-web-module/controllers/SabreController"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/controllers/SabreController"))}),System.registerDynamic("com-internova-gtcpayment-web-module/index",["com-internova-gtcpayment-web-module/Main","com-internova-gtcpayment-web-module/Context"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0});var a=e("./Main"),i=e("./Context"),s=function(e){function Module_com_internova_gtcpayment_web_module(t){var n=e.call(this,t)||this;return i.context.setModule(n),n}return o(Module_com_internova_gtcpayment_web_module,e),Module_com_internova_gtcpayment_web_module}(a.Main);t.default=s}),System.registerDynamic("com-internova-gtcpayment-web-module/index.js",["com-internova-gtcpayment-web-module/index"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/index"))}),System.registerDynamic("com-internova-gtcpayment-web-module/Main",["sabre-ngv-core/modules/Module","sabre-ngv-xp/configs/RedAppSidePanelConfig","sabre-ngv-xp/services/ExtensionPointService","com-internova-gtcpayment-web-module/Context","sabre-ngv-redAppSidePanel/models/RedAppSidePanelButton","sabre-ngv-reservation/services/IReservationService","sabre-ngv-core/services/LayerService","com-internova-gtcpayment-web-module/model/RestModel","com-internova-gtcpayment-web-module/views/Gtc_Payment","com-internova-gtcpayment-web-module/controllers/SabreController","com-internova-gtcpayment-web-module/common/Utilitario","com-internova-gtcpayment-web-module/services/ExternalService","com-internova-gtcpayment-web-module/services/SabreService"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)}),a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,a){function fulfilled(e){try{step(r.next(e))}catch(t){a(t)}}function rejected(e){try{step(r.throw(e))}catch(t){a(t)}}function step(e){e.done?o(e.value):function adopt(e){return e instanceof n?e:new n(function(t){t(e)})}(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})},i=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function verb(a){return function(s){return function step(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(s){a=[6,s],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Main=void 0;var s=e("sabre-ngv-core/modules/Module"),c=e("sabre-ngv-xp/configs/RedAppSidePanelConfig"),l=e("sabre-ngv-xp/services/ExtensionPointService"),m=e("./Context"),u=e("sabre-ngv-redAppSidePanel/models/RedAppSidePanelButton"),d=e("sabre-ngv-reservation/services/IReservationService"),p=e("sabre-ngv-core/services/LayerService"),v=e("./model/RestModel"),b=e("./views/Gtc_Payment"),y=e("./controllers/SabreController"),f=e("./common/Utilitario"),g=e("./services/ExternalService"),S=e("./services/SabreService"),h=function(e){function Main(){return null!==e&&e.apply(this,arguments)||this}return o(Main,e),Main.prototype.init=function(){var t=this;e.prototype.init.call(this),(0,m.registerService)(y.SabreController),(0,m.registerService)(f.Utilitario),(0,m.registerService)(g.ExternalService),(0,m.registerService)(S.SabreService);var n=(0,m.getService)(l.ExtensionPointService),r=new c.RedAppSidePanelConfig([new u.RedAppSidePanelButton("GTC UK Payment Process","btn btn-secondary side-panel-button redapp-web-rest redapp-web-rest-internal",function(){return t.openModalWithRest()})]);n.addConfig("redAppSidePanel",r)},Main.prototype.openModalWithRest=function(){return a(this,void 0,void 0,function(){var e,t;return i(this,function(n){switch(n.label){case 0:return[4,(0,m.getService)(d.IReservationService).getReservation()];case 1:return e=n.sent(),t={title:"GTC UK Payment Process",actions:[{className:"app.common.views.Button",caption:"Cancel",actionName:"cancel",type:"secondary"},{className:"app.common.views.Button",caption:"Continue",actionName:"next",type:"success"}]},(0,m.getService)(p.LayerService).showInModal(new b.Gtc_Payment({model:new v.RestModel},e),t,{display:"areaView"}),[2]}})})},Main}(s.Module);t.Main=h}),System.registerDynamic("com-internova-gtcpayment-web-module/Main.js",["com-internova-gtcpayment-web-module/Main"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/Main"))}),System.registerDynamic("com-internova-gtcpayment-web-module/model/AddRemarks",["sabre-ngv-app/app/AbstractModel","com-internova-gtcpayment-web-module/Context","sabre-ngv-communication/services/RestApiService"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0}),t.RestModel=void 0;var a=e("sabre-ngv-app/app/AbstractModel"),i=e("../Context"),s=e("sabre-ngv-communication/services/RestApiService"),c=function(e){function RestModel(){return null!==e&&e.apply(this,arguments)||this}return o(RestModel,e),RestModel.prototype.sendRestRequest=function(e,t,n,r,o){return(0,i.getService)(s.RestApiService).send({httpMethod:t,url:e,authTokenType:n,payload:r,headers:o})},RestModel}(a.AbstractModel);t.RestModel=c}),System.registerDynamic("com-internova-gtcpayment-web-module/model/AddRemarks.js",["com-internova-gtcpayment-web-module/model/AddRemarks"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/model/AddRemarks"))}),System.registerDynamic("com-internova-gtcpayment-web-module/model/ccData",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ccData=void 0;var r=function(){return function ccData(){}}();t.ccData=r}),System.registerDynamic("com-internova-gtcpayment-web-module/model/ccData.js",["com-internova-gtcpayment-web-module/model/ccData"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/model/ccData"))}),System.registerDynamic("com-internova-gtcpayment-web-module/model/pqFare",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.pqFare=void 0;var r=function(){return function pqFare(){}}();t.pqFare=r}),System.registerDynamic("com-internova-gtcpayment-web-module/model/pqFare.js",["com-internova-gtcpayment-web-module/model/pqFare"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/model/pqFare"))}),System.registerDynamic("com-internova-gtcpayment-web-module/model/remark",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.remark=void 0;var r=function(){return function remark(){}}();t.remark=r}),System.registerDynamic("com-internova-gtcpayment-web-module/model/remark.js",["com-internova-gtcpayment-web-module/model/remark"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/model/remark"))}),System.registerDynamic("com-internova-gtcpayment-web-module/model/RestModel",["sabre-ngv-app/app/AbstractModel","com-internova-gtcpayment-web-module/Context","sabre-ngv-communication/services/RestApiService"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0}),t.RestModel=void 0;var a=e("sabre-ngv-app/app/AbstractModel"),i=e("../Context"),s=e("sabre-ngv-communication/services/RestApiService"),c=function(e){function RestModel(){return null!==e&&e.apply(this,arguments)||this}return o(RestModel,e),RestModel.prototype.sendRestRequest=function(e,t,n,r,o){return(0,i.getService)(s.RestApiService).send({httpMethod:t,url:e,authTokenType:n,payload:r,headers:o})},RestModel}(a.AbstractModel);t.RestModel=c}),System.registerDynamic("com-internova-gtcpayment-web-module/model/RestModel.js",["com-internova-gtcpayment-web-module/model/RestModel"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/model/RestModel"))}),System.registerDynamic("com-internova-gtcpayment-web-module/services/ExternalService",["sabre-ngv-app/app/services/impl/AbstractService"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)});Object.defineProperty(t,"__esModule",{value:!0}),t.ExternalService=void 0;var a=function(e){function ExternalService(){return null!==e&&e.apply(this,arguments)||this}return o(ExternalService,e),ExternalService.prototype.sendRequest=function(e,t){return new Promise(function(n,r){var o=new XMLHttpRequest;o.open(e,t),o.onload=function(){this.status>=200&&this.status<300?n(o.response):r({status:this.status,statusText:o.statusText})},o.onerror=function(){r({status:this.status,statusText:o.statusText})},o.send()})},ExternalService.SERVICE_NAME="com-internova-gtcpayment-web-module-ExternalService",ExternalService}(e("sabre-ngv-app/app/services/impl/AbstractService").AbstractService);t.ExternalService=a}),System.registerDynamic("com-internova-gtcpayment-web-module/services/ExternalService.js",["com-internova-gtcpayment-web-module/services/ExternalService"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/services/ExternalService"))}),System.registerDynamic("com-internova-gtcpayment-web-module/services/IExternalService",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})}),System.registerDynamic("com-internova-gtcpayment-web-module/services/IExternalService.js",["com-internova-gtcpayment-web-module/services/IExternalService"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/services/IExternalService"))}),System.registerDynamic("com-internova-gtcpayment-web-module/services/ISabreService",[],!1,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})}),System.registerDynamic("com-internova-gtcpayment-web-module/services/ISabreService.js",["com-internova-gtcpayment-web-module/services/ISabreService"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/services/ISabreService"))}),System.registerDynamic("com-internova-gtcpayment-web-module/services/SabreService",["sabre-ngv-app/app/services/impl/AbstractService","sabre-ngv-communication/interfaces/ISoapApiService","com-internova-gtcpayment-web-module/Context","sabre-ngv-app/app/services/impl/SrwSyncApi","sabre-ngv-communication/services/RestApiService"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)}),a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,a){function fulfilled(e){try{step(r.next(e))}catch(t){a(t)}}function rejected(e){try{step(r.throw(e))}catch(t){a(t)}}function step(e){e.done?o(e.value):function adopt(e){return e instanceof n?e:new n(function(t){t(e)})}(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})},i=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function verb(a){return function(s){return function step(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(s){a=[6,s],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.SabreService=void 0;var s=e("sabre-ngv-app/app/services/impl/AbstractService"),c=e("sabre-ngv-communication/interfaces/ISoapApiService"),l=e("../Context"),m=e("sabre-ngv-app/app/services/impl/SrwSyncApi"),u=e("sabre-ngv-communication/services/RestApiService"),d=function(e){function SabreService(){return null!==e&&e.apply(this,arguments)||this}return o(SabreService,e),SabreService.prototype.callSoapServiceAsync=function(e,t,n,r){var o=this;return new Promise(function(s,m){var u=(0,l.getService)(c.ISoapApiService),d={action:t,payload:e,authTokenType:n,timeout:r};console.log("rq_:",d),u.callSws(d).then(function(e){return a(o,void 0,void 0,function(){return i(this,function(t){return console.log("async: response",e),s(e.value),[2]})})}).catch(function(e){console.log("callSoapServiceAsync error: ",e),m(e)})})},SabreService.prototype.callSoapServiceSync=function(e,t){var n=(0,l.getService)(m.SrwSyncApi);try{return n.sws(e,t)}catch(r){}},SabreService.prototype.callRestServiceAsync=function(e,t,n,r,o){return(0,l.getService)(u.RestApiService).send({httpMethod:t,url:e,authTokenType:n,payload:r,headers:o})},SabreService.SERVICE_NAME="com-internova-gtcpayment-web-module-SabreService",SabreService}(s.AbstractService);t.SabreService=d}),System.registerDynamic("com-internova-gtcpayment-web-module/services/SabreService.js",["com-internova-gtcpayment-web-module/services/SabreService"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/services/SabreService"))}),System.registerDynamic("com-internova-gtcpayment-web-module/views/CheckTotal",["sabre-ngv-app/app/AbstractView","sabre-ngv-core/services/LayerService","sabre-ngv-core/decorators/classes/view/Template","sabre-ngv-app/app/services/impl/IAreaService","com-internova-gtcpayment-web-module/controllers/SabreController","sabre-ngv-communication/interfaces/ISoapApiService","com-internova-gtcpayment-web-module/Context","xml2js","com-internova-gtcpayment-web-module/model/remark"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)}),a=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,a){function fulfilled(e){try{step(r.next(e))}catch(t){a(t)}}function rejected(e){try{step(r.throw(e))}catch(t){a(t)}}function step(e){e.done?o(e.value):function adopt(e){return e instanceof n?e:new n(function(t){t(e)})}(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})},c=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function verb(a){return function(s){return function step(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(s){a=[6,s],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.CheckTotal=void 0;var l=e("sabre-ngv-app/app/AbstractView"),m=e("sabre-ngv-core/services/LayerService"),u=e("sabre-ngv-core/decorators/classes/view/Template"),d=e("sabre-ngv-app/app/services/impl/IAreaService"),p=e("../controllers/SabreController"),v=e("sabre-ngv-communication/interfaces/ISoapApiService"),b=e("../Context"),y=e("xml2js"),f=e("../model/remark"),g=function(e){function CheckTotal(t,n){var r=e.call(this,t)||this;return r.rmks=[],r.createRmks=[],r.processData(n),console.log("rmks",r.rmks),console.log("createRmks",r.createRmks),r.getModel().set("total",n.total),r.render(),r}return o(CheckTotal,e),CheckTotal.prototype.initialize=function(t){e.prototype.initialize.call(this,t)},CheckTotal.prototype.processData=function(e){this.rmks=e.UpdateRmk;var t=e.option;this.rmks.filter(function(e){return"CM"==e.Code})[0].Text="CM-"+e.ccCode+e.card4+"/"+e.expMonth+e.expYear+"/*",this.rmks.filter(function(e){return"PAY"==e.Code})[0].Text="PAYMENT/123456/"+e.refId+"/"+e.total;this.generateRmk("PAYMENT/"+t+"123456/"+e.refId+"/"+e.total+"/"+e.ccCode+e.card4);var n="";e.markUpFee&&(n="M"+e.markUpFee),e.fee&&(n=n+"/S"+e.fee),e.pqAmt&&(n=n+"/T"+e.pqAmt),e.additional&&(n=n+"/A"+e.additional),e.total&&(n=n+"/TT"+e.total),this.generateRmk(n)},CheckTotal.prototype.selfNextAction=function(){return s(this,void 0,void 0,function(){var e,t,n,r,o,a,i=this;return c(this,function(l){return e=(0,b.getService)(d.IAreaService),t=(0,b.getService)(p.SabreController),console.log("getreservationpromise",t),t.RemarkUpdate(this.rmks).then(function(n){console.log("Rmks to update",i.rmks),t.SendCommandMessage("*.",!0,!0).then(function(n){console.log("remarks been displayed"),t.buildRequestAddRemark(i.createRmks).then(function(n){e.showBanner("Success","Remarks were added"),t.SendCommandMessage("*P5H",!0,!0).then(function(e){console.log("remarks been displayed")})})}),e.showBanner("Success","Remarks were updated")}),(0,b.getService)(m.LayerService).clearLayer(),n=this.$(".action-field").find(".action").val(),r=this.$(".authTokenType-field").find(".authTokenType").val(),o=this.$(".timeout-field").find(".timeout").val(),a=this.$(".payload-field").find(".payload").val(),this.$(".response").val(""),(0,b.getService)(v.ISoapApiService).callSws({action:n,payload:a,authTokenType:r,timeout:o}).then(function(e){return s(i,void 0,void 0,function(){var t,n;return c(this,function(r){switch(r.label){case 0:return e.errorCode?(n=e,[3,3]):[3,1];case 1:return[4,this.parseXml2Js(e.value)];case 2:n=r.sent(),r.label=3;case 3:return t=n,this.$(".response").val(JSON.stringify(t,null,2)),[2]}})})}).catch(function(e){i.$(".response").val(e)}),e.showBanner("Success","Remarks were added!: "+this.adflexRef),(0,b.getService)(m.LayerService).clearLayer(),[2]})})},CheckTotal.prototype.parseXml2Js=function(e){return s(this,void 0,void 0,function(){return c(this,function(t){return[2,new Promise(function(t,n){y.parseString(e,function(e,r){e?n(e):t(r)})})]})})},CheckTotal.prototype.generateRmk=function(e){var t=new f.remark;t.Type="Historical",t.Text=e,this.createRmks.push(t)},CheckTotal=a([(0,u.Template)("com-internova-gtcpayment-web-module:CheckTotal"),i("design:paramtypes",[Object,Object])],CheckTotal)}(l.AbstractView);t.CheckTotal=g}),System.registerDynamic("com-internova-gtcpayment-web-module/views/CheckTotal.js",["com-internova-gtcpayment-web-module/views/CheckTotal"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/views/CheckTotal"))}),System.registerDynamic("com-internova-gtcpayment-web-module/views/Gtc_Payment",["sabre-ngv-app/app/AbstractView","sabre-ngv-core/services/LayerService","sabre-ngv-core/decorators/classes/view/Template","com-internova-gtcpayment-web-module/model/pqFare","com-internova-gtcpayment-web-module/model/ccData","sabre-ngv-app/app/services/impl/IAreaService","com-internova-gtcpayment-web-module/model/RestModel","com-internova-gtcpayment-web-module/Context","com-internova-gtcpayment-web-module/views/CheckTotal","com-internova-gtcpayment-web-module/model/remark","com-internova-gtcpayment-web-module/controllers/SabreController"],!1,function(e,t,n){"use strict";var r,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function __(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)}),a=this&&this.__decorate||function(e,t,n,r){var o,a=arguments.length,i=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(a<3?o(i):a>3?o(t,n,i):o(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},i=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},s=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))(function(o,a){function fulfilled(e){try{step(r.next(e))}catch(t){a(t)}}function rejected(e){try{step(r.throw(e))}catch(t){a(t)}}function step(e){e.done?o(e.value):function adopt(e){return e instanceof n?e:new n(function(t){t(e)})}(e.value).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})},c=this&&this.__generator||function(e,t){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function verb(a){return function(s){return function step(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(s){a=[6,s],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.Gtc_Payment=void 0;var l=e("sabre-ngv-app/app/AbstractView"),m=e("sabre-ngv-core/services/LayerService"),u=e("sabre-ngv-core/decorators/classes/view/Template"),d=e("../model/pqFare"),p=e("../model/ccData"),v=e("sabre-ngv-app/app/services/impl/IAreaService"),b=e("../model/RestModel"),y=e("../Context"),f=e("./CheckTotal"),g=e("../model/remark"),S=e("../controllers/SabreController"),h=function(e){function Gtc_Payment(t,n){var r=e.call(this,t)||this;return r.status=[],r.vendors=[{code:"AX"},{code:"VI"},{code:"CA"}],r.totalPax=0,r.updateRmks=[],r.pqFareList=[],r.creditCardList=[],r.getReservation(n),r}return o(Gtc_Payment,e),Gtc_Payment.prototype.initialize=function(t){e.prototype.addDomEvents.call(this,{"change #selectPq":"loadAmount","change #creditCards":"loadExpiration","change #markUpFee":"updateTotal","change #amt":"updateTotal","change #additional":"updateTotal","change #tktFee":"updateTotal"}),e.prototype.initialize.call(this,t)},Gtc_Payment.prototype.getReservation=function(e){var t,n,r,o,a=this;(0,y.getService)(S.SabreController);if(e){var i=e.Data,s=null===(t=null==e?void 0:e.Data)||void 0===t?void 0:t.RecordLocators[0].Id,c=i.Passengers.Passenger.length;this.totalPax=c;var l,u,b,f=new Date,h=f.getFullYear().toString(),w=f.getMonth()+1,R=f.getDate(),x=R<10?"0"+R.toString():R.toString(),P=w<10?"0"+w.toString():w.toString(),C=s+h[2]+h[3]+P+x,_="",T=0,A=0,I=i.Passengers.Passenger[0].GivenName+" "+i.Passengers.Passenger[0].Surname;if(null===(n=i.PriceQuotes)||void 0===n?void 0:n.PriceQuote)(b=i.PriceQuotes.PriceQuote).length&&b.forEach(function(e){if("GBP"==e.Taxes.TotalTax.Currency){var t=new d.pqFare,n=e.Id.toString();t.item=n[n.length-1],t.total=e.Total.Amount.Amount,t.taxes=e.Taxes.TotalTax.Amount,a.pqFareList.push(t)}});if(null===(r=i.FormOfPayments)||void 0===r?void 0:r.FormOfPayment)(b=i.FormOfPayments.FormOfPayment).length&&b.forEach(function(e){var t=new p.ccData;if(t.code=e.CreditCard.CreditCardCode,t.cardMasked=t.code+e.CreditCard.CreditCardNumber,t.cardMasked){for(var n="",r=t.cardMasked.length-4;r<t.cardMasked.length;r++)n+=t.cardMasked[r].toString();t.last4=n}t.year=e.CreditCard.ExpirationYear[2]+e.CreditCard.ExpirationYear[3],t.month=e.CreditCard.ExpirationMonth,a.creditCardList.push(t)});if(null===(o=i.Remarks)||void 0===o?void 0:o.Remark){var O=i.Remarks.Remark;O.length&&O.forEach(function(e){if("Invoice"==e.Type){var t=e.Text.split("MKUP/");if(t[1]){var n=t[1].split("/");l=n[1],T+=parseFloat(l)}var r,o=e.Text.split("TKTFEE/");if(o[1]?u=o[1]:(o=e.Text.split("FEE/"))[1]&&(_=o[1]),e.Text.split("CM-")[1])(r=new g.remark).Type="Itinerary",r.Id=e.Source.Id.toString(),r.Text=e.Text,r.Code="CM",a.updateRmks.push(r);if(e.Text.split("PAYMENT/")[1])(r=new g.remark).Type="Itinerary",r.Id=e.Source.Id.toString(),r.Text=e.Text,r.Code="PAY",a.updateRmks.push(r)}})}u&&(A=c*parseFloat(u)),_&&(A=parseFloat(_));var E=T+A;this.getModel().set("markUpFee",T.toFixed(2)),this.getModel().set("tktFee",A.toFixed(2)),this.getModel().set("selectPq",this.pqFareList),this.getModel().set("creditCards",this.creditCardList),this.getModel().set("name",I),this.getModel().set("refId",C),this.getModel().set("total",E.toFixed(2)+" GBP"),this.getModel().set("vendors",this.vendors),this.render()}else{(0,y.getService)(v.IAreaService).showBanner("Error","There is no active PNR..."),(0,y.getService)(m.LayerService).clearLayer()}},Gtc_Payment.prototype.loadAmount=function(e){var t=this,n=this.$("#selectPq").children("option:selected").val();e.target&&(this.pqFareList.forEach(function(e){e.item==n&&(document.getElementById("amt").value=e.total.toString(),t.updateTotal())}),$("#selectPq").val(n))},Gtc_Payment.prototype.loadExpiration=function(e){var t=this.$("#creditCards").children("option:selected").val();e.target&&(this.creditCardList.forEach(function(e){if(e.cardMasked==t){document.getElementById("cardInUse").value=t;var n=e.month+"/"+e.year;document.getElementById("expiration").value=n}}),$("#creditCards").val(t));var n=document.getElementById("cardInUse");"addCC"==t?(document.getElementById("cardInUse").value="",document.getElementById("expiration").value="",document.getElementById("vendor").removeAttribute("disabled"),n.removeAttribute("disabled")):n.setAttribute("disabled","")},Gtc_Payment.prototype.updateTotal=function(e){var t=0,n=0,r=0,o=0;document.getElementById("markUpFee").value&&(t=parseFloat(document.getElementById("markUpFee").value),document.getElementById("markUpFee").value=t.toFixed(2)),document.getElementById("amt").value&&(n=parseFloat(document.getElementById("amt").value),document.getElementById("amt").value=n.toFixed(2)),document.getElementById("additional").value&&(r=parseFloat(document.getElementById("additional").value),document.getElementById("additional").value=r.toFixed(2)),document.getElementById("tktFee").value&&(o=parseFloat(document.getElementById("tktFee").value),document.getElementById("tktFee").value=o.toFixed(2));var a=t+n+r+o;document.getElementById("total").value=a.toFixed(2)+" GBP"},Gtc_Payment.prototype.selfNextAction=function(){return s(this,void 0,void 0,function(){return c(this,function(e){return this.InputValidator()&&this.execute(),[2]})})},Gtc_Payment.prototype.execute=function(){var e,t=document.getElementById("markUpFee").value,n=document.getElementById("name").value,r=document.getElementById("tktFee").value,o=document.getElementById("amt").value,a=document.getElementById("additional").value,i=document.getElementById("total").value,s=this.$("#creditCards").children("option:selected").val(),c=this.$("#test").children("option:selected").val(),l="";if("addCC"==s){e=this.$("#vendor").children("option:selected").val();for(var u=(s=document.getElementById("cardInUse").value).length-4;u<s.length;u++)l+=s[u].toString()}else{var d=this.creditCardList.filter(function(e){return e.cardMasked==s});l=d[0].last4,e=d[0].code}var p=document.getElementById("refId").value,v=document.getElementById("expiration").value,g=v.split("/")[0],S=v.split("/")[1],h={markUpFee:t,fee:r,name:n,pqAmt:o,additional:a,total:i,fullCard:s,expMonth:g,expYear:S,card4:l,option:c,ccCode:e,refId:p,UpdateRmk:this.updateRmks};console.log("pack",h);(0,y.getService)(m.LayerService).showInModal(new f.CheckTotal({model:new b.RestModel},h),{title:"Confirmation",actions:[{className:"app.common.views.Button",caption:"Cancel",actionName:"cancel",type:"secondary"},{className:"app.common.views.Button",caption:"Back",actionName:"back",type:"secondary"},{className:"app.common.views.Button",caption:"Add Remarks",actionName:"next",type:"success"}]},{display:"areaView"})},Gtc_Payment.prototype.InputValidator=function(){var e=!0,t=document.getElementById("total").value;if(parseFloat(t.split("GBP")[0])>0){this.fieldOk("total");for(var n=document.querySelectorAll("[required]"),r=0;r<n.length;r++){var o=n[r].id,a=document.getElementById(o).value;if("creditCards"==o&&"ccNoSelected"==a){this.errorOnField(o,"Field cannot be empty or blank"),e=!1;break}if("creditCards"==o&&"addCC"==a){if(1==this.status.creditCards&&this.fieldOk("creditCards"),"noVendor"==document.getElementById("vendor").value){this.status.vendor=!0,this.errorOnField("vendor","Select one"),e=!1;break}this.fieldOk("vendor");var i=document.getElementById("cardInUse").value;if(16==i.length&&1==this.status.cardInUse)this.fieldOk("cardInUse");else{if(i.length>16){this.errorOnField("cardInUse","Maximum 16 numbers"),e=!1;break}if(i.length<=15){this.status.cardInUse=!0,this.errorOnField("cardInUse","Minimum 16 numbers"),e=!1;break}}}else if("name"==o){var s=document.getElementById("name").value;if(!s){this.errorOnField("name","Name is mandatory"),e=!1;break}s&&1==this.status.name&&this.fieldOk("creditCards")}else if("name"==o){var c=document.getElementById("name").value;if(!c){this.errorOnField("name","Name is mandatory"),e=!1;break}c&&1==this.status.name&&this.fieldOk("creditCards")}else if("expiration"==o){if(!document.getElementById("expiration").value){this.errorOnField("expiration","Expiration is mandatory"),e=!1;break}var l=new Date,m=l.getFullYear().toString(),u=l.getMonth()+1,d=parseFloat(m[2]+m[3]),p=document.getElementById("expiration").value,v=parseFloat(p.split("/")[0]),b=parseFloat(p.split("/")[1]);if(isNaN(v)||isNaN(b)||v>12||v<1||b<d||b==d&&v<u){this.errorOnField("expiration","MM/YY like: 05/27"),e=!1;break}this.fieldOk("expiration")}}}else this.errorOnField("total","Must be greater than 0"),e=!1;return e},Gtc_Payment.prototype.errorOnField=function(e,t){document.getElementById(e+"Error").innerText=t,document.getElementById(e+"Div").classList.add("has-error"),document.getElementById(e).focus(),this.status[e]=!0},Gtc_Payment.prototype.fieldOk=function(e){1==this.status[e]&&(document.getElementById(e+"Div").classList.remove("has-error"),document.getElementById(e+"Error").innerText="",this.status[e]=!1)},Gtc_Payment=a([(0,u.Template)("com-internova-gtcpayment-web-module:Gtc_Payment"),i("design:paramtypes",[Object,Object])],Gtc_Payment)}(l.AbstractView);t.Gtc_Payment=h}),System.registerDynamic("com-internova-gtcpayment-web-module/views/Gtc_Payment.js",["com-internova-gtcpayment-web-module/views/Gtc_Payment"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/views/Gtc_Payment"))}),System.registerDynamic("com-internova-gtcpayment-web-module",["com-internova-gtcpayment-web-module/index"],!1,function(e,t){Object.assign(t,e("com-internova-gtcpayment-web-module/index"))});
//# sourceMappingURL=data:application/json;charset=utf-8;base64, 